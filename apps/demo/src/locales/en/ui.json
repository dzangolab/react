{
  "buttons": {
    "back": "Back"
  },
  "common": {
    "usage": "To use the {{component}} component, simply import it into your React file:"
  },
  "headers": {
    "buttons": "Buttons",
    "data": "Data",
    "examples": "Examples",
    "file": "File",
    "formWidgets": "Form widgets",
    "import": "Import",
    "menu": "Menu",
    "messages": "Messages",
    "misc": "Misc",
    "overlay": "Overlay",
    "panel": "Panel",
    "properties": "Properties",
    "propertiesValue": "Properties: {{value}}",
    "usage": "Usage",
    "types": "Types"
  },
  "button": {
    "title": "Button",
    "subtitle": "The Button component is a flexible and customizable button implementation for React applications. It supports various properties for styling, behavior, and functionality, making it suitable for different use cases.",
    "usage": {
      "basic": "Basic",
      "variant": "Variant",
      "severity": "Severity",
      "size": "Size",
      "outlined": "Outlined",
      "icons": "Icons",
      "disabled": "Disabled",
      "text": "Text",
      "link": "Link",
      "tooltip": "Button with tooltip"
    },
    "message": "Click to view profile"
  },
  "checkboxInput": {
    "title": "CheckboxInput",
    "subtitle": "The CheckboxInput component is a versatile and reusable component that supports both single and multiple checkbox selections. It allows for customization through a variety of props and handles validation, error messages, and helper texts.",
    "usage": {
      "basic": "Basic",
      "customLabel": "Custom label for single checkbox input",
      "multiple": "Multiple checkbox input",
      "customOptionsLabel": "Custom label for multiple checkbox input",
      "customOptionsLabelDescription": "The `renderOptionsLabel` function in a checkbox group allows custom rendering of options label. You can use it to display rich content like icons, descriptions, or formatted text.",
      "disabled": "Disabled"
    }
  },
  "card": {
    "title": "Card",
    "header": "Card header",
    "body": "Card body",
    "footer": "Card footer",
    "usage": {
      "basic": "Basic",
      "outlined": "Outlined card"
    }
  },
  "confirmationModal": {
    "title": "Confirmation modal",
    "buttonLabel": "Open confirmation modal",
    "header": "Confirmation required",
    "message": "Are you sure you want to proceed?"
  },
  "currencyPicker": {
    "label": "Currency",
    "multiSelectPlaceholder": "Select currencies",
    "placeholder": "Select a currency",
    "title": "CurrencyPicker",
    "usage": {
      "basic": "Basic",
      "extensiveOptions": "Currency picker with extensive options",
      "multiple": "Multiple currency select"
    }
  },
  "data": {
    "title": "Data",
    "subtitle": "The Data component is a reusable React component designed to display a labeled value.",
    "usage": {
      "basic": "Basic",
      "mode": "Stat mode",
      "displayObject": "Display value from object",
      "structuredData": "Rendering structured data",
      "example": "Example"
    }
  },
  "dropdownMenu": {
    "title": "Dropdown menu",
    "usage": {
      "hiddenDropdownIcon": "Hidden dropdown icon with default label",
      "leftAlign": "Popup align left",
      "templating": "Menu templating"
    },
    "label": {
      "setting": "Settings",
      "user": "User"
    }
  },
  "editableTitle": {
    "usage": {
      "basic": {
        "title": "Basic",
        "description": "Editable title can be used by passing a `title` property. Title level is optional, it is `h1` by default. `onblur` event on the title input field triggers `onUpdate` method."
      },
      "controlled": {
        "title": "Controlled",
        "description": "Editable title can be used as a controllable element by passing `onChange` property. Note this will impact the performance of the component."
      },
      "disabled": {
        "description": "The edit function can be disabled. To do this, pass the `allowEdit` option with value `false`.",
        "title": "Disabled edit"
      },
      "customToggler": {
        "description": "The toggle button can be customized by pass your own toggler using `toggler` prop.",
        "title": "Custom toggler"
      }
    },
    "subtitle": "Editable title is an extension to a page or section title which can be edited.",
    "title": "Editable title"
  },
  "filesTable": {
    "title": "Files table",
    "pagination": {
      "pageControl": "Go to page",
      "rowsPerPage": "Items per page"
    }
  },
  "gridContainer": {
    "title": "Grid container"
  },
  "inlineLink": {
    "title": "Inline link",
    "label": "Click here"
  },
  "loading": {
    "title": "Loading"
  },
  "responsiveMenu": {
    "title": "Responsive menu"
  },
  "submitButton": {
    "title": "Submit button",
    "usage": {
      "basic": "Basic",
      "loading": "Loading"
    }
  },
  "youtubeFacade": {
    "title": "Youtube facade"
  },
  "exportButton": {
    "title": "Export button"
  },
  "fileCard": {
    "title": "File card"
  },
  "filesList": {
    "title": "Files list"
  },
  "filesPresentation": {
    "title": "Files presentation"
  },
  "table": {
    "title": "Table",
    "cssCodeBlock": {
      "title": "CSS code example",
      "messages": {
        "addHorizontal": "Add following css to your stylesheet for horizontal borders",
        "addVertical": "Add following css to your stylesheet for vertical borders",
        "note": "Note:"
      }
    },
    "usage": {
      "basic": "Basic table",
      "builtInActionColumn": "Table demonstrating built in actions column use case",
      "cellDataFormatting": "Table demonstrating cell content formatting",
      "filterable": "Table with filterable column",
      "sortable": "Table with sortable column",
      "rowSelection": "Table with row selection",
      "persistentState": "Table with persistent state",
      "customCellDataFormatting": "Table with custom cell data formatter",
      "customPagination": "Table with custom pagination",
      "customToolbarActions": "Table with custom toolbar actions",
      "columnTooltip": "Table with tooltip column",
      "columnAlignment": "Table cell content alignments",
      "columnAction": "Table with column action",
      "withFooter": "Table with footer",
      "withoutPagination": "Table without pagination",
      "withTitle": "Table with title",
      "withCustomFilter": "Table with custom filter component and filterFn",
      "withEqualServerFilter": "Table with equal server filterFn",
      "customStaticFilter": "Table with custom  filter component and static filterFn",
      "divContent": "Table demonstrating center aligned content",
      "singleActionColumn": "Table with single action button",
      "singleActionColumnWithMenu": "Table with single action menu",
      "rowSpecificActions": "Table with actions menu items filtered based on row data logic",
      "tableBorderHorizontal": "Table with custom style for horizontal border",
      "tableBorderVertical": "Table with custom style for vertical border"
    },
    "placeholder": {
      "country": "Select country",
      "date": "Select date",
      "endDate": "End date",
      "max": "Max",
      "min": "Min",
      "startDate": "Start date",
      "search": "Search",
      "select": "Select city",
      "status": "Select status"
    }
  },
  "message": {
    "contents": {
      "content1": "Season sale: Up to 50% off selected items!",
      "content2": "New features just launched! Check them out!",
      "content3": "New Year, New You: Start fresh with our services!",
      "content4": "We value your feedback: take our quick survey!",
      "content5": "Warning: Limited time only! Sale ends soon!"
    },
    "subtitle": "The Message component displays contextual messages with optional icons and a closable action. It supports custom slots, making it flexible for various use cases.",
    "title": "Message",
    "usage": {
      "basic": "Basic",
      "enableClose": "Enable close",
      "icons": {
        "icon": "Icon",
        "iconSlot": "Icon slot"
      },
      "withI18n": "With i18n"
    }
  },
  "modal": {
    "title": "Modal",
    "header": "Header",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    "showButton": "Open modal",
    "usage": {
      "headerAsFC": "Header as functional component",
      "withHeader": "With header",
      "withoutHeader": "Without header"
    }
  },
  "tooltip": {
    "title": "Tooltip",
    "position": {
      "right": "Right",
      "left": "Left",
      "top": "Top",
      "bottom": "Bottom",
      "mouseTrack": "Mouse track",
      "configured": "Configured"
    }
  },
  "checkbox": {
    "title": "Checkbox"
  },
  "input": {
    "title": "Input",
    "usage": {
      "basic": "Basic",
      "invalidInput": "Invalid input"
    }
  },
  "sortableList": {
    "title": "Sortable list"
  },
  "popup": {
    "title": "Popup"
  },
  "stepper": {
    "title": "Stepper"
  },
  "tabbedPanel": {
    "title": "Tabbed panel",
    "usage": {
      "basic": "Basic usage",
      "customActiveTab": "Custom active tab",
      "disableTabState": {
        "subTitle": "By default, tab state is persisted between page refresh and navigations. You can disable this feature by passing persistState={false} prop to the component",
        "title": "State persistence disabled"
      },
      "positionBottom": "Bottom tabs",
      "positionLeft": "Left tabs",
      "positionRight": "Right tabs"
    }
  },
  "tabview": {
    "title": "TabView",
    "usage": {
      "basic": "Basic",
      "closable": "Closable tabs",
      "control": "Controlled tab navigation",
      "disableTabState": {
        "subTitle": "By default, tab state is persisted between page refresh and navigations. You can disable this feature by passing persistState={false} prop to the component",
        "title": "State persistence disabled"
      },
      "hashRoute": "Hash routing enabled",
      "positionBottom": "Bottom tabs",
      "positionLeft": "Left tabs",
      "positionRight": "Right tabs"
    }
  },
  "textarea": {
    "errorMessage": "Invalid input",
    "label": "Textarea label",
    "placeHolder": "Textarea placeholder",
    "title": "Textarea"
  },
  "page": {
    "title": {
      "menu": "Page",
      "basic": "Page demo basic",
      "centerAligned": "Page with center aligned contents",
      "toolbar": "Page with toolbar",
      "stringSubtitle": "Page with subtitle string",
      "componentSubtitle": "Page with subtitle component",
      "breadcrumb": "Page with breadcrumb",
      "complete": "Page with every component"
    },
    "subTitle": {
      "title": "Page subtitle",
      "tag": "Subtitle tag"
    },
    "heading": {
      "tag": "Heading tag"
    },
    "breadcrumb": {
      "back": "Back"
    },
    "toolbar": {
      "edit": "Edit",
      "button": {
        "label": "Click"
      }
    },
    "content": "Page content."
  },
  "tag": {
    "title": "Tag",
    "usage": {
      "basic": "Basic",
      "color": "Color",
      "custom": "Custom tag",
      "icon": "Icon",
      "pill": "Pill"
    }
  },
  "select": {
    "autoSortOptionsInfo": "By default, options are sorted alphabetically. To render options in original order as provided, you can use <code>autoSortOptions={false}</code>",
    "label": "Country",
    "multiSelectPlaceholder": "Select countries",
    "placeholder": "Select a country",
    "title": "Select",
    "usage": {
      "basic": "Basic",
      "disabled": "Disabled",
      "group": "With grouping",
      "groupMultiSelect": "Multiselect with grouping",
      "groupMultiSelectDisabled": "Multiselect with group select disabled",
      "invalid": "Invalid",
      "key": "With label and value keys",
      "multiple": "Multiple select",
      "renderOption": "Select with custom option",
      "renderValue": "Select with custom selected value",
      "withTooltip": "With tooltip"
    }
  },
  "switchInput": {
    "basic": "Basic",
    "controlled": "Controlled",
    "disabledInput": "Disabled input",
    "invalidInput": "Invalid input",
    "normalInput": "Check here",
    "title": "Switch input",
    "subtitle": "The SwitchInput component is a customizable checkbox switch for toggling states. It supports additional properties such as error handling and labeling."
  },
  "typeahead": {
    "message": {
      "emptyMessage": "No results found"
    },
    "title": "Typeahead",
    "label": {
      "client": "Client side typeahead",
      "customSuggestion": "Custom suggestion typeahead",
      "disabled": "Disabled",
      "emptyMessage": "Empty message typeahead",
      "server": "Server side typeahead",
      "invalid": "Invalid"
    },
    "placeholder": "Search..."
  }
}
